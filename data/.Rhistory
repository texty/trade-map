ungroup()
setwd('/home/yevheniia/git/import-export/data')
nested_ %>% jsonlite::toJSON(na="null", pretty = TRUE) %>% writeLines("top5.json")
library("readxl")
library("xlsx")
library('dplyr')
library('lubridate')
library('stringr')
library("tidyr")
setwd('/home/yevheniia/R/2019/october/food_exports_imports/total')
path = '/home/yevheniia/R/2019/october/food_exports_imports/total'
exported = read.xlsx("total_exports_2001-2018_by_country.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
View(exported)
imported = read.xlsx("total_imports_2001-2018_by_country.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
View(imported)
View(exported)
# rename to rbind
names(exported)[names(exported) == "Importers"] <- "country"
names(exported)[-1] <- sub(".*\\.", "", names(exported)[-1])
names(imported)[names(imported) == "Exporters"] <- "country"
names(imported)[-1] <- sub(".*\\.", "", names(imported)[-1])
exported = read.xlsx("total_exports_2001-2018_by_country.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
exported$position = "exported"
imported = read.xlsx("total_imports_2001-2018_by_country.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
imported$position = "imported"
# rename to rbind
names(exported)[names(exported) == "Importers"] <- "country"
names(exported)[-1] <- sub(".*\\.", "", names(exported)[-1])
names(imported)[names(imported) == "Exporters"] <- "country"
names(imported)[-1] <- sub(".*\\.", "", names(imported)[-1])
# final data
data = rbind(exported, imported)
View(data)
data$total = rowSums(data[2:19])
data = left_join(data, countries_uk, by="country")
countries_uk = read.csv("trade_map_countries_ukraine_translation.csv", stringsAsFactors = F)
setwd('/home/yevheniia/R/2019/october/food_exports_imports')
countries_uk = read.csv("trade_map_countries_ukraine_translation.csv", stringsAsFactors = F)
data = left_join(data, countries_uk, by="country")
##################################################################
# чистимо дані, завантажені з www.trademap.org
#################################################################
setwd('/home/yevheniia/R/2019/october/food_exports_imports/total')
exported = read.xlsx("total_exports_2001-2018_by_country.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
imported = read.xlsx("total_imports_2001-2018_by_country.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
setwd('/home/yevheniia/R/2019/october/food_exports_imports')
countries_uk = read.csv("trade_map_countries_ukraine_translation.csv", stringsAsFactors = F)
exported$position = "exported"
imported$position = "imported"
# rename to rbind
names(exported)[names(exported) == "Importers"] <- "country"
names(exported)[-1] <- sub(".*\\.", "", names(exported)[-1])
names(imported)[names(imported) == "Exporters"] <- "country"
names(imported)[-1] <- sub(".*\\.", "", names(imported)[-1])
# final data
data = rbind(exported, imported)
data$total = rowSums(data[2:19])
data = left_join(data, countries_uk, by="country")
##################################################################
# чистимо дані, завантажені з www.trademap.org
#################################################################
setwd('/home/yevheniia/R/2019/october/food_exports_imports/total')
exported = read.xlsx("total_exports_2001-2018_by_country.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
imported = read.xlsx("total_imports_2001-2018_by_country.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
setwd('/home/yevheniia/R/2019/october/food_exports_imports')
countries_uk = read.csv("trade_map_countries_ukraine_translation.csv", stringsAsFactors = F)
View(countries_uk)
exported$position = "exported"
imported$position = "imported"
# rename to rbind
names(exported)[names(exported) == "Importers"] <- "country"
names(exported)[-1] <- sub(".*\\.", "", names(exported)[-1])
names(imported)[names(imported) == "Exporters"] <- "country"
names(imported)[-1] <- sub(".*\\.", "", names(imported)[-1])
# final data
data = rbind(exported, imported)
data$total = rowSums(data[2:19])
data = left_join(data, countries_uk, by="country")
dataForMap = data %>%
select(1,20,21,22)
View(dataForMap)
dataForMap =  spread(dataForMap, position, total)
names(map_data)[names(map_data) == "exported"] <- "exported_to"
names(map_data)[names(map_data) == "imported"] <- "imported_from"
names(dataForMap)[names(dataForMap) == "exported"] <- "exported_to"
names(dataForMap)[names(dataForMap) == "imported"] <- "imported_from"
setwd('/home/yevheniia/qgis/projects/trade-map/')
write.csv(map_data, "total_import_and_export_by_country.csv", row.names = F)
setwd('/home/yevheniia/qgis/projects/trade-map/')
write.csv(dataForMap, "total_import_and_export_by_country.csv", row.names = F)
# final data
data = rbind(exported, imported)
data$total = rowSums(data[2:19])
data$total_01_13 = rowSums(data[2:14])
data$total_04_18 = rowSums(data[15:19])
data = left_join(data, countries_uk, by="country")
dataForMap = data %>%
select(1,20:24)
# final data
data = rbind(exported, imported)
data$total = rowSums(data[2:19])
data$total_01_13 = rowSums(data[2:14])
data$total_14_18 = rowSums(data[15:19])
data = left_join(data, countries_uk, by="country")
dataForMap = data %>%
select(1,20:24)
dataForMap =  spread(dataForMap, position, total)
names(dataForMap)[names(dataForMap) == "exported"] <- "exported_to"
names(dataForMap)[names(dataForMap) == "imported"] <- "imported_from"
setwd('/home/yevheniia/qgis/projects/trade-map/')
write.csv(dataForMap, "total_import_and_export_by_country.csv", row.names = F)
##################################################################
# чистимо дані, завантажені з www.trademap.org
#################################################################
setwd('/home/yevheniia/R/2019/october/food_exports_imports/total')
exported = read.xlsx("total_exports_2001-2018_by_country.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
imported = read.xlsx("total_imports_2001-2018_by_country.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
setwd('/home/yevheniia/R/2019/october/food_exports_imports')
countries_uk = read.csv("trade_map_countries_ukraine_translation.csv", stringsAsFactors = F)
exported$position = "exported"
imported$position = "imported"
# rename to rbind
names(exported)[names(exported) == "Importers"] <- "country"
names(exported)[-1] <- sub(".*\\.", "", names(exported)[-1])
names(imported)[names(imported) == "Exporters"] <- "country"
names(imported)[-1] <- sub(".*\\.", "", names(imported)[-1])
# final data
data = rbind(exported, imported)
data$total = rowSums(data[2:19])
data$total_01_13 = rowSums(data[2:14])
data$total_14_18 = rowSums(data[15:19])
data = left_join(data, countries_uk, by="country")
dataForMap = data %>%
select(1,20:24)
dataTotal = data %>%
select(1,20,21,24)
dataForMap =  spread(dataForMap, position, total)
dataTotal = data %>%
select(1,20,21,24)
dataTotal =  spread(dataTotal, position, total)
View(dataTotal)
dataTotal = data %>%
select(1,20,21,24) %>%
spread(position, total)
data_01_13 = data %>%
select(1,20,22,24) %>%
spread(position, total_01_13)
View(data_01_13)
names(dataTotal)[names(dataTotal) == "exported"] <- "exported_to"
names(dataTotal)[names(dataTotal) == "imported"] <- "imported_from"
data_01_13 = data %>%
select(1,20,22,24) %>%
spread(position, total_01_13)
data_01_13 = data %>%
select(1,20,22,24)
data_01_13 = data %>%
select(1,20,22,24) %>%
spread(position, total_01_13)
names(data_01_13)[names(data_01_13) == "exported"] <- "01_13_exported_to"
names(data_01_13)[names(data_01_13) == "imported"] <- "01_13_imported_from"
data_01_13 = data %>%
select(1,20,22,24) %>%
spread(position, total_01_13) %>%
rename('01_13_exported_to' = "exported")
dataTotal = data %>%
select(1,20,21,24) %>%
spread(position, total) %>%
rename('01_18_exported_to' = "exported") %>%
rename('01_18_imported_from' = "imported")
data_01_13 = data %>%
select(1,20,22,24) %>%
spread(position, total_01_13) %>%
rename('01_13_exported_to' = "exported") %>%
rename('01_13_imported_from' = "imported")
data_14_18 = data %>%
select(1,20,23,24) %>%
spread(position, total_01_13) %>%
rename('14_18_exported_to' = "exported") %>%
rename('14_18_imported_from' = "imported")
dataTotal = data %>%
select(1,20,21,24) %>%
spread(position, total) %>%
rename('01_18_exported_to' = "exported") %>%
rename('01_18_imported_from' = "imported")
data_01_13 = data %>%
select(1,20,22,24) %>%
spread(position, total_01_13) %>%
rename('01_13_exported_to' = "exported") %>%
rename('01_13_imported_from' = "imported")
data_14_18 = data %>%
select(1,20,23,24) %>%
spread(position, total_14_18) %>%
rename('14_18_exported_to' = "exported") %>%
rename('14_18_imported_from' = "imported")
View(data_01_13)
dataForMap = merge(dataTotal, data_01_13, by=c("country", "country_uk"))
View(dataForMap)
dataForMap = merge(dataForMap, data_14_18, by=c("country", "country_uk"))
setwd('/home/yevheniia/qgis/projects/trade-map/')
write.csv(dataForMap, "total_import_and_export_by_country.csv", row.names = F)
##########################################
# топ -5 експорту та імпорта для спрклайнів
###########################################
setwd('/home/yevheniia/R/2019/october/food_exports_imports/total')
exported = read.xlsx("total_exports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
imported = read.xlsx("total_imports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
View(exported)
##########################################
# топ -5 експорту та імпорта для спрклайнів
###########################################
setwd('/home/yevheniia/R/2019/october/food_exports_imports/total')
exported = read.xlsx("total_exports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
##########################################
# топ -5 експорту та імпорта для спрклайнів
###########################################
setwd('/home/yevheniia/R/2019/october/food_exports_imports/total')
exported = read.xlsx("total_exports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
imported = read.xlsx("total_imports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
exported$position = "exported"
imported$position = "imported"
##########################################
# топ -5 експорту та імпорта для спрклайнів
###########################################
setwd('/home/yevheniia/R/2019/october/food_exports_imports/total')
exported = read.xlsx("total_exports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
imported = read.xlsx("total_imports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
exported$position = "exported"
imported$position = "imported"
# rename to rbind
names(exported)[-1] <- sub(".*\\.", "", names(exported)[-1])
names(imported)[-1] <- sub(".*\\.", "", names(imported)[-1])
data = rbind(exported, imported)
View(data)
exported$total = rowSums(exported[3:20])
exported$total = rowSums(exported[3:20]) %>% arrange(desc(total))
exported$total = rowSums(exported[3:20]) %>% arrange(desc(total)) %>% head(6)
str(exported)
exported$Code <- as.character(exported$Code)
exported$label <- as.character(exported$label)
exported$total = rowSums(exported[3:20]) %>% arrange(desc(total)) %>% head(6)
exported = exported%>%
arrange(desc(total)) %>% head(6)
exported = exported[-c(1),]
imported$Code <- as.character(imported$Code)
imported$label <- as.character(imported$label)
imported$total = rowSums(imported[3:20])
imported = imported%>%
arrange(desc(total))%>%
head(6)
imported = imported[-c(1),]
View(imported)
data = rbind(exported, imported)
View(data)
##########################################
# топ -5 експорту та імпорта для спрклайнів
###########################################
setwd('/home/yevheniia/R/2019/october/food_exports_imports/total')
exported = read.xlsx("total_exports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
imported = read.xlsx("total_imports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
exported$position = "exported"
imported$position = "imported"
names(exported)[-1] <- sub(".*\\.", "X", names(exported)[-1])
names(imported)[-1] <- sub(".*\\.", "X", names(imported)[-1])
names(exported)[-1]
names(exported)[-2]
names(exported)[-3]
names(exported)[-1]
##########################################
# топ -5 експорту та імпорта для спрклайнів
###########################################
setwd('/home/yevheniia/R/2019/october/food_exports_imports/total')
exported = read.xlsx("total_exports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
imported = read.xlsx("total_imports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
exported$position = "exported"
imported$position = "imported"
names(exported)[-1] <- sub(".*\\.", "X", names(exported)[-1])
names(imported)[-1] <- sub(".*\\.", "X", names(imported)[-1])
exported$Code <- as.character(exported$Code)
exported$Xlabel <- as.character(exported$Xlabel)
exported$total = rowSums(exported[3:20])
exported = exported%>%
arrange(desc(total))%>%
head(6)
exported = exported[-c(1),]
imported$Code <- as.character(imported$Code)
imported$Xlabel <- as.character(imported$Xlabel)
imported$total = rowSums(imported[3:20])
imported = imported%>%
arrange(desc(total))%>%
head(6)
imported = imported[-c(1),]
data = rbind(exported, imported)
data = data %>%  gather(X2001:X2018, key = year, value = thousdol)
##########################################
# топ -5 експорту та імпорта для спрклайнів
###########################################
setwd('/home/yevheniia/R/2019/october/food_exports_imports/total')
exported = read.xlsx("total_exports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
imported = read.xlsx("total_imports_2001_2018_by_product.xlsx", sheetIndex=1, startRow=14, header=TRUE, as.data.frame=TRUE)
exported$position = "exported"
imported$position = "imported"
names(exported)[-1] <- sub(".*\\.", "X", names(exported)[-1])
names(imported)[-1] <- sub(".*\\.", "X", names(imported)[-1])
exported$Code <- as.character(exported$Code)
exported$Xlabel <- as.character(exported$Xlabel)
exported$total = rowSums(exported[3:20])
exported = exported%>%
arrange(desc(total))%>%
head(6)
exported = exported[-c(1),]
imported$Code <- as.character(imported$Code)
imported$Xlabel <- as.character(imported$Xlabel)
imported$total = rowSums(imported[3:20])
imported = imported%>%
arrange(desc(total))%>%
head(6)
imported = imported[-c(1),]
data = rbind(exported, imported)
data = data %>%  gather(X2001:X2018, key = year, value = thousdol)
data = rbind(exported, imported) %>%
gather(X2001:X2018, key = year, value = thousdol) %>%
rename(product = Xlabel)
data = rbind(exported, imported) %>%
gather(X2001:X2018, key = year, value = thousdol) %>%
select(-Code) %>%
rename(product = Xlabel)
nested_ <- data %>%
group_by(product, position, total)  %>%
nest() %>%
ungroup()
setwd('/home/yevheniia/git/import-export/data')
nested_ %>% jsonlite::toJSON(na="null", pretty = TRUE) %>% writeLines("top5.json")
nested_ %>% jsonlite::toJSON(na="null", pretty = TRUE) %>% writeLines("top_5.json")
data = rbind(exported, imported) %>%
gather(X2001:X2018, key = year, value = thous) %>%
select(-Code) %>%
rename(product = Xlabel)
nested_ <- data %>%
group_by(product, position, total)  %>%
nest() %>%
ungroup()
setwd('/home/yevheniia/git/import-export/data')
nested_ %>% jsonlite::toJSON(na="null", pretty = TRUE) %>% writeLines("top_5.json")
data = rbind(exported, imported) %>%
gather(X2001:X2018, key = year, value = thous) %>%
select(-Code) %>%
rename(product = Xlabel) %>%
mutate(year = sub("X", "", year))
data = rbind(exported, imported) %>%
gather(X2001:X2018, key = year, value = thous) %>%
select(-Code) %>%
rename(product = Xlabel) %>%
mutate(year = sub("X", "01-01-", year))
nested_ <- data %>%
group_by(product, position, total)  %>%
nest() %>%
ungroup()
setwd('/home/yevheniia/git/import-export/data')
nested_ %>% jsonlite::toJSON(na="null", pretty = TRUE) %>% writeLines("top_5.json")
library("readxl")
library("xlsx")
library('dplyr')
library('lubridate')
library('stringr')
library("tidyr")
setwd('/home/yevheniia/R/2019/october/food_exports_imports/data')
path = '/home/yevheniia/R/2019/october/food_exports_imports/data'
e_files = list.files(path, pattern = "E.xlsx")
i_files = list.files(path, pattern = "I.xlsx")
exported = data.frame()
imported = data.frame()
# додаємо назву продукту і відносини - імпортовано або експортовано
# товари експорту
for(i in 1:length(e_files)){
x = read.xlsx(e_files[i], sheetIndex = 1,  startRow=14, header=TRUE, as.data.frame=TRUE)
product = read.xlsx(e_files[i], sheetIndex=1, startRow=2, endRow=3, header=FALSE, as.data.frame=TRUE)
product = sub("Product: ", '', as.character(product[1,1]))
x$product = product
position = colnames(x)[2]
position = sub("\\..*", '', position)
x$position = position
exported = rbind(exported, x)
}
# додаємо назву продукту і відносини - імпортовано або експортовано
# товари імпорту
for(i in 1:length(i_files)){
x = read.xlsx(i_files[i], sheetIndex = 1,  startRow=14, header=TRUE, as.data.frame=TRUE)
product = read.xlsx(i_files[i], sheetIndex=1, startRow=2, endRow=3, header=FALSE, as.data.frame=TRUE)
product = sub("Product: ", '', as.character(product[1,1]))
x$product = product
position = colnames(x)[2]
position = sub("\\..*", '', position)
x$position = position
imported = rbind(imported, x)
}
# rename to rbind
names(exported)[names(exported) == "Importers"] <- "country"
names(exported)[-1] <- sub(".*\\.", "", names(exported)[-1])
names(imported)[names(imported) == "Exporters"] <- "country"
names(imported)[-1] <- sub(".*\\.", "", names(imported)[-1])
# final data
data = rbind(exported, imported)
countries_uk = read.csv("trade_map_countries_ukraine_translation.csv", stringsAsFactors = F)
setwd('/home/yevheniia/R/2019/october/food_exports_imports')
countries_uk = read.csv("trade_map_countries_ukraine_translation.csv", stringsAsFactors = F)
data = left_join(data, countries_uk, by="country")
library("readxl")
library("xlsx")
library('dplyr')
library('lubridate')
library('stringr')
library("tidyr")
setwd('/home/yevheniia/R/2019/october/food_exports_imports/data')
path = '/home/yevheniia/R/2019/october/food_exports_imports/data'
e_files = list.files(path, pattern = "E.xlsx")
i_files = list.files(path, pattern = "I.xlsx")
exported = data.frame()
imported = data.frame()
# додаємо назву продукту і відносини - імпортовано або експортовано
# товари експорту
for(i in 1:length(e_files)){
x = read.xlsx(e_files[i], sheetIndex = 1,  startRow=14, header=TRUE, as.data.frame=TRUE)
product = read.xlsx(e_files[i], sheetIndex=1, startRow=2, endRow=3, header=FALSE, as.data.frame=TRUE)
product = sub("Product: ", '', as.character(product[1,1]))
x$product = product
position = colnames(x)[2]
position = sub("\\..*", '', position)
x$position = position
exported = rbind(exported, x)
}
# додаємо назву продукту і відносини - імпортовано або експортовано
# товари імпорту
for(i in 1:length(i_files)){
x = read.xlsx(i_files[i], sheetIndex = 1,  startRow=14, header=TRUE, as.data.frame=TRUE)
product = read.xlsx(i_files[i], sheetIndex=1, startRow=2, endRow=3, header=FALSE, as.data.frame=TRUE)
product = sub("Product: ", '', as.character(product[1,1]))
x$product = product
position = colnames(x)[2]
position = sub("\\..*", '', position)
x$position = position
imported = rbind(imported, x)
}
# rename to rbind
names(exported)[names(exported) == "Importers"] <- "country"
names(exported)[-1] <- sub(".*\\.", "", names(exported)[-1])
names(imported)[names(imported) == "Exporters"] <- "country"
names(imported)[-1] <- sub(".*\\.", "", names(imported)[-1])
# final data
data = rbind(exported, imported)
setwd('/home/yevheniia/R/2019/october/food_exports_imports')
write.csv(data, "20_years_of_food_exports_imports.csv", row.names = F)
##################################################################
# дані для d3 трохи перероблені
##################################################################
setwd('/home/yevheniia/R/2019/october/food_exports_imports')
data = read.csv("20_years_of_food_exports_imports.csv", stringsAsFactors = F)
setwd('/home/yevheniia/R/2019/october/food_exports_imports')
countries_uk = read.csv("trade_map_countries_ukraine_translation.csv", stringsAsFactors = F)
data = left_join(data, countries_uk, by="country")
data = data %>%  gather(X2001:X2018, key = year, value = thousdol)
data$year = sub("X", "01-01-", data$year)
data$year = sub("01-01-2018", "31-12-2018", data$year)
for(i in 1:length(data$product)){
if(str_detect(data$product[i], '^[:digit:][:digit:][:space:]')){
data$category[i] = "group"
data$categotyNumber[i] = substr(data$product[i], start = 1, stop = 2)
data$sort[i] = paste0(substr(data$product[i], start = 1, stop = 2), "00")
} else {
data$category[i]  = "subgroup"
data$categotyNumber[i] = substr(data$product[i], start = 1, stop = 2)
data$sort[i] = substr(data$product[i], start = 1, stop = 4)
}
}
countries = data %>%
select(1) %>%
distinct()
View(countries)
setwd('/home/yevheniia/Desktop/')
write.csv(countries, "countries.csv", row.names = F)
countries_new = data %>%
select(1) %>%
distinct()
setwd('/home/yevheniia/R/2019/october/food_exports_imports')
countries_uk = read.csv("trade_map_countries_ukraine_translation.csv", stringsAsFactors = F)
View(countries_new)
View(countries_uk)
counteries = left_join(countries_new, countries_uk, by="country")
View(counteries)
countries = left_join(countries_new, countries_uk, by="country")
#
setwd('/home/yevheniia/Desktop/')
write.csv(countries, "countries.csv", row.names = F)
setwd('/home/yevheniia/R/2019/october/food_exports_imports')
countries_uk = read.csv("trade_map_countries_ukraine_translation.csv", stringsAsFactors = F)
data = left_join(data, countries_uk, by="country")
data$country_uk.x = NULL
data$country_uk.y = NULL
setwd('/home/yevheniia/R/2019/october/food_exports_imports')
countries_uk = read.csv("trade_map_countries_ukraine_translation.csv", stringsAsFactors = F)
data = left_join(data, countries_uk, by="country")
##########################################
# дані без 0, щоб злегшити файл
#########################################
data_no_zero = data %>%
filter(thousdol != 0)
##########################################
# розводимо експорт та імпорт на дві колонки
#########################################
data2 =  spread(data_no_zero, position, thousdol)
View(data2)
setwd('/home/yevheniia/git/import-export/data')
write.csv(data2, "data.csv", row.names = F)
